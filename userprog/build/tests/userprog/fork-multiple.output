Kernel command line: -q -f put fork-multiple run fork-multiple
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  104,755,200 loops/s.
hd0:0: detected 321 sector (160 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 104 sector (52 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'fork-multiple' into the file system...
Executing 'fork-multiple':
(fork-multiple) begin
process fork child thread name : child
exit cur name : child
child: exit(-1)
Page fault at 0x298: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at rip=800420a79d
 cr2=0000000000000298 error=               0
rax 0000000000000298 rbx 0000000000000000 rcx 00000000004034f2 rdx 0000000000000020
rsp 0000008004240e70 rbp 0000008004240e90 rsi 0000000000000000 rdi 0000000000000298
rip 000000800420a79d r8 0000000000000000  r9 0000000000000000 r10 0000000000000000
r11 0000000000000216 r12 000000800421d874 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000002
es: 001b ds: 001b cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x800421888e 0x800421d543 0x800421d728 0x8004209745 0x8004209b63 0x800421c816 0x800421dd10 0x800421d948 0x800421d79d 0x40013b 0x4001a7 0x400229 0x400cca.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 64 ticks
Thread: 30 idle ticks, 26 kernel ticks, 8 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 87 reads, 236 writes
hd1:0: 104 reads, 0 writes
Console: 1872 characters output
Key