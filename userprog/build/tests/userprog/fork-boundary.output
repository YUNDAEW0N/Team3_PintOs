Kernel command line: -q -f put fork-boundary run fork-boundary
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  117,760,000 loops/s.
hd0:0: detected 321 sector (160 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 107 sector (53 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'fork-boundary' into the file system...
Executing 'fork-boundary':
(fork-boundary) begin
(fork-boundary) fork
(fork-boundary) wait
(fork-boundary) wait: FAILED
fork-boundary: exit(1)
Page fault at 0: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at rip=800420d404
 cr2=0000000000000000 error=               0
rax 0000000000000000 rbx 0000000000000000 rcx 0000008004242000 rdx 0000000000000000
rsp 000000800423fea0 rbp 000000800423fed0 rsi 000000800421bfcd rdi 0000000000000000
rip 000000800420d404 r8 0000000000000000  r9 0000000000000000 r10 0000000000000000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000246
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x8004218867 0x800421d37a 0x800421d55f 0x800420971e 0x8004209b3c 0x800421c0fd 0x8004207aac.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 68 ticks
Thread: 30 idle ticks, 30 kernel ticks, 8 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 80 reads, 242 writes
hd1:0: 107 reads, 0 writes
Console: 1823 characters output
Key