Kernel command line: -q -f put syn-write put child-syn-wrt run syn-write
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 329 sector (164 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 226 sector (113 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'syn-write' into the file system...
Putting 'child-syn-wrt' into the file system...
Executing 'syn-write':
(syn-write) begin
(syn-write) create "stuff"
syscall hadler f : 커널 주소랍니다..
ffork intr_frame f : 커널 주소군요...
ffork thread_current tf : 커널 주소네요...
process fork if :당연히 커널 주소입니다...
process fork child thread name : child-syn-wrt
do fork parent : 저도 커널 출신이에요..
do_fork parent if : 당연히 저도 커널 주소랍니다..
is_kernel vaddr error!
_do_fork pml4 for each error!
_do_fork error! 
(syn-write) exec child 1 of 10: "child-syn-wrt 0"
syscall hadler f : 커널 주소랍니다..
ffork intr_frame f : 커널 주소군요...
ffork thread_current tf : 커널 주소네요...
process fork if :당연히 커널 주소입니다...
process fork child thread name : child-syn-wrt
do fork parent : 저도 커널 출신이에요..
do_fork parent if : 당연히 저도 커널 주소랍니다..
is_kernel vaddr error!
_do_fork pml4 for each error!
_do_fork error! 
(syn-write) exec child 2 of 10: "child-syn-wrt 1"
syscall hadler f : 커널 주소랍니다..
ffork intr_frame f : 커널 주소군요...
ffork thread_current tf : 커널 주소네요...
process fork if :당연히 커널 주소입니다...
process fork child thread name : child-syn-wrt
do fork parent : 저도 커널 출신이에요..
do_fork parent if : 당연히 저도 커널 주소랍니다..
is_kernel vaddr error!
_do_fork pml4 for each error!
_do_fork error! 
(syn-write) exec child 3 of 10: "child-syn-wrt 2"
syscall hadler f : 커널 주소랍니다..
ffork intr_frame f : 커널 주소군요...
ffork thread_current tf : 커널 주소네요...
process fork if :당연히 커널 주소입니다...
process fork child thread name : child-syn-wrt
do fork parent : 저도 커널 출신이에요..
do_fork parent if : 당연히 저도 커널 주소랍니다..
is_kernel vaddr error!
_do_fork pml4 for each error!
_do_fork error! 
(syn-write) exec child 4 of 10: "child-syn-wrt 3"
syscall hadler f : 커널 주소랍니다..
ffork intr_frame f : 커널 주소군요...
ffork thread_current tf : 커널 주소네요...
process fork if :당연히 커널 주소입니다...
process fork child thread name : child-syn-wrt
do fork parent : 저도 커널 출신이에요..
do_fork parent if : 당연히 저도 커널 주소랍니다..
is_kernel vaddr error!
_do_fork pml4 for each error!
_do_fork error! 
(syn-write) exec child 5 of 10: "child-syn-wrt 4"
syscall hadler f : 커널 주소랍니다..
ffork intr_frame f : 커널 주소군요...
ffork thread_current tf : 커널 주소네요...
process fork if :당연히 커널 주소입니다...
process fork child thread name : child-syn-wrt
do fork parent : 저도 커널 출신이에요..
do_fork parent if : 당연히 저도 커널 주소랍니다..
is_kernel vaddr error!
_do_fork pml4 for each error!
_do_fork error! 
(syn-write) exec child 6 of 10: "child-syn-wrt 5"
syscall hadler f : 커널 주소랍니다..
ffork intr_frame f : 커널 주소군요...
ffork thread_current tf : 커널 주소네요...
process fork if :당연히 커널 주소입니다...
process fork child thread name : child-syn-wrt
do fork parent : 저도 커널 출신이에요..
do_fork parent if : 당연히 저도 커널 주소랍니다..
is_kernel vaddr error!
_do_fork pml4 for each error!
_do_fork error! 
(syn-write) exec child 7 of 10: "child-syn-wrt 6"
syscall hadler f : 커널 주소랍니다..
ffork intr_frame f : 커널 주소군요...
ffork thread_current tf : 커널 주소네요...
process fork if :당연히 커널 주소입니다...
process fork child thread name : child-syn-wrt
do fork parent : 저도 커널 출신이에요..
do_fork parent if : 당연히 저도 커널 주소랍니다..
is_kernel vaddr error!
_do_fork pml4 for each error!
_do_fork error! 
(syn-write) exec child 8 of 10: "child-syn-wrt 7"
syscall hadler f : 커널 주소랍니다..
ffork intr_frame f : 커널 주소군요...
ffork thread_current tf : 커널 주소네요...
process fork if :당연히 커널 주소입니다...
process fork child thread name : child-syn-wrt
do fork parent : 저도 커널 출신이에요..
do_fork parent if : 당연히 저도 커널 주소랍니다..
is_kernel vaddr error!
_do_fork pml4 for each error!
_do_fork error! 
(syn-write) exec child 9 of 10: "child-syn-wrt 8"
syscall hadler f : 커널 주소랍니다..
ffork intr_frame f : 커널 주소군요...
ffork thread_current tf : 커널 주소네요...
process fork if :당연히 커널 주소입니다...
process fork child thread name : child-syn-wrt
do fork parent : 저도 커널 출신이에요..
do_fork parent if : 당연히 저도 커널 주소랍니다..
is_kernel vaddr error!
_do_fork pml4 for each error!
_do_fork error! 
(syn-write) exec child 10 of 10: "child-syn-wrt 9"
Interrupt 0x0d (#GP General Protection Exception) at rip=8004208817
 cr2=0000000000000000 error=               0
rax ccccccccccccc9e4 rbx 0000000000000000 rcx 0000000000403816 rdx 0000000000000020
rsp 0000008004241e60 rbp 0000008004241e90 rsi 0000000000000000 rdi 00000080042412c8
rip 0000008004208817 r8 0000000000000000  r9 0000000000000000 r10 0000000000000000
r11 0000000000000216 r12 000000800421d986 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000286
es: 001b ds: 001b cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x800421888e 0x800421d655 0x8004209745 0x8004209b63 0x800421c8f7 0x800421deb3 0x800421da83 0x800421d8af 0x4007b7 0x400196 0x400fa5 0x400fee.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 113 ticks
Thread: 30 idle ticks, 43 kernel ticks, 40 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 132 reads, 512 writes
hd1:0: 226 reads, 0 writes
Console: 6477 characters output
Key